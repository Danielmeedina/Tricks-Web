---
interface pages{
  title: string,
  text: string,
  url: string
}
interface Props {
  title: string,
  utilsPages: pages[],
}
const {title, utilsPages} = Astro.props
---


<details class="accordion-container">
  <summary>
    <p class="titles">{title}</p>
    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-down" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M6 9l6 6l6 -6"></path>
    </svg>
  </summary>
  <ul>
    {utilsPages.map(({ title, url, text }) => (
      <li>
        <a href={url} target="_blank" rel="noopener noreferrer" title={`Ã¬r a la pagina de ${title}`}>
          <p class="title-page">{title}</p>
          <p class="text">{text}</p>
        </a>
      </li>
    ))}
  </ul>
</details>

<style>
  .accordion-container {
    --accordion-section-color: #3b3b3b;
    width: 100%;
    color: rgb(var(--title-color));
  }

  summary {
    padding: 20px 10px;
  }

  .titles {
    color: rgb(var(--title-color));
    font-size: 20px;
    font-weight: 400;
  }

  summary {
    list-style: none;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
  }

  summary:hover {
    background-color: var(--accordion-section-color);
  }
  summary svg{
    transition: transform .5s ease;
  }

  .accordion-container[open] summary svg {
    transform: rotate(180deg);
  }

  .accordion-container[open] summary {
    background-color: var(--accordion-section-color);
    position: sticky;
    top:0;
  }

  .accordion-container[open] .titles,
  .accordion-container[open] svg {
    color: rgb(var(--second-color));
  }

  .accordion-container[open] {
    border: 1px solid var(--accordion-section-color);
  }

  .accordion-container ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 10px;
    padding: 10px 0;
  }

  .accordion-container li {
    list-style: none;
    width: 100%;
    min-width: 250px;
  }

  .accordion-container a {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-flow: column nowrap;
    gap: 5px;
    text-decoration: none;
    padding: 10px;
  }

  .accordion-container .title-page {
    color: rgb(var(--title-color));
    font-size: 20px;
    font-weight: 400;
  }

  .accordion-container a:hover .title-page{
    color: rgb(var(--second-color));
  }

  .accordion-container a:hover {
    background-color: var(--accordion-section-color);
  }

  .text {
    color: rgb(var(--text-color));
    font-size: 14px;
  }
  .text:first-letter{
    text-transform: uppercase;
  }
</style>

<script>
  const details = document.querySelectorAll('details');

  details.forEach(detail => {
    detail.addEventListener('click', () => {
      details.forEach(otherdetail => {
        if (otherdetail !== detail) {
          otherdetail.removeAttribute('open');
        }
      });
    });
  });
</script>